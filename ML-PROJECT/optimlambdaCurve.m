function [lambda_values, train_error, valid_error] = optimlambdaCurve(initialweights,input_layer_size,...
                                                                   hidden_layer1_size,hidden_layer2_size,no_labels,...
                                                                   x, y, xval, yval,epochs)

lambda_values = [0 0.001 0.003 0.01 0.03 0.1 0.3 1 3 10]';


train_error = zeros(length(lambda_values), 1);
valid_error = zeros(length(lambda_values), 1);


for i=1:length(lambda_values),
  [finalweights, costval] = training_model(initialweights, ...
                                           input_layer_size, ...
                                           hidden_layer1_size, ...
                                           hidden_layer2_size,no_labels, ...
                                           x, y, lambda_values(i),epochs);
  [Jtrain, gradtrain]=CostandGradient(finalweights, ...
                                     input_layer_size, ...
                                     hidden_layer1_size, ...
                                     hidden_layer2_size,no_labels, ...
                                     x, y, 0);
  [Jvalid, gradvalid]=CostandGradient(finalweights, ...
                                     input_layer_size, ...
                                     hidden_layer1_size, ...
                                     hidden_layer2_size,no_labels, ...
                                     xval, yval, 0);

  train_error(i)=Jtrain;
  valid_error(i)=Jvalid;

end


end
