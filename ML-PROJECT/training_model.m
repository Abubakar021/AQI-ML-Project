function [finalweights costval] = training_model(initialweights, ...
                                                 input_layer_size, ...
                                                 hidden_layer1_size, ...
                                                 hidden_layer2_size,no_labels, ...
                                                 x, y, lambda,epochs)

finalweights=zeros(size(initialweights));
costval=0;
options = optimset('MaxIter', epochs,'GradObj', 'on');


costFunction = @(p) CostandGradient(p, ...
                                    input_layer_size, ...
                                    hidden_layer1_size, ...
                                    hidden_layer2_size,...
                                    no_labels, x, y, lambda);

% Minimizing using fmincg function
[finalweights, costval] = fminunc(costFunction, initialweights, options);
%for i=1:epochs,
  %[J grad] = CostandGradient(initialweights, ...
   %                          input_layer_size, ...
    %                         hidden_layer1_size, ...
     %                        hidden_layer2_size,no_labels, ...
      %                       x, y, lambda);
  %initialweights=initialweights-(0.1*grad);
  %fprintf('\niteration : %d || cost: %f',i,J);

%end
%finalweights=initialweights;
%costval=J;
end
